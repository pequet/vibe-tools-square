# Task Definition: ask-demo
TASK_NAME="ask-demo"
TASK_DESCRIPTION="ðŸš€ Demo: Project briefing template with variable injection"
TASK_TYPE="ask"

# Model and Provider Configuration
TASK_PROVIDER="gemini"
TASK_MODEL="free"

# Template 
TASK_TEMPLATE="ask-demo-project-briefing"

# Template Variables (will be injected in the Template)
TASK_PROJECT_NAME="{{PROJECT_NAME=My Amazing Project}}"
TASK_USER_ROLE="{{USER_ROLE=Lead Developer}}"
TASK_DOMAIN="{{DOMAIN=Web Development}}"
TASK_TECH_STACK="{{TECH_STACK=Node.js, React, TypeScript}}"
TASK_PRIORITY="{{PRIORITY=High}}"
TASK_CONTEXT="{{CONTEXT=file:README.md}}"
TASK_DEADLINE="{{DEADLINE=Next Friday}}"

# Parameters (will be appended to the command)
PARAM_MAX_TOKENS="4000"
PARAM_REASONING_EFFORT="high"

# Output Configuration
TASK_OUTPUT_PREFIX="ask-demo-project-brief"

# Usage: ./run-prompt.sh ask-demo [--project-name="Your Project"] [--user-role="Project Manager"] [--domain="Mobile Development"] [--tech-stack="Swift, SwiftUI"] [--priority="Medium"] [--readme-path="docs/README.md"] [--deadline="Two weeks"] [--go]
#
# This template demonstrates:
# 1. How to create an advanced task with a custom template
# 2. How to define default values for template variables
# 3. How to inject file content using file: prefix
# 4. How to use the template variables in the template
# 5. How to format the output with a prefix
