# Task Definition: plan-demo
TASK_NAME="plan-demo"
TASK_DESCRIPTION="üìù Demo: Feature planning with architecture considerations and implementation steps"
TASK_TYPE="plan"

# Dual Model Configuration (Plan uses both file and thinking models)
TASK_FILE_PROVIDER="gemini"
TASK_FILE_MODEL="free" 
TASK_THINKING_PROVIDER="gemini"
TASK_THINKING_MODEL="free"

# Template 
TASK_TEMPLATE="plan-demo-feature-planning"

# Template Variables (will be injected in the Template)
TASK_FEATURE_NAME="{{FEATURE_NAME=New Feature}}"
TASK_COMPLEXITY="{{COMPLEXITY=Medium}}"
TASK_PRIORITY="{{PRIORITY=High}}"
TASK_REQUIREMENTS="file:{{REQUIREMENTS_FILE=docs/requirements.md}}"
TASK_ARCHITECTURE="file:{{ARCHITECTURE_FILE=docs/architecture.md}}"
TASK_DEPENDENCIES="{{DEPENDENCIES=React, Redux, Express}}"
TASK_TIMELINE="{{TIMELINE=2-week sprint}}"
TASK_TEAM_SIZE="{{TEAM_SIZE=3 developers}}"
TASK_TARGET_AUDIENCE="{{TARGET_AUDIENCE=Enterprise customers}}"

# Context Curation (Default values for include/exclude)
PARAM_INCLUDE="src/,docs/,README.md"
PARAM_EXCLUDE=""

# Parameters (will be appended to the command)
PARAM_MAX_TOKENS="8000"
PARAM_REASONING_EFFORT="high"

# Output Configuration
TASK_OUTPUT_PREFIX="plan-demo-feature-plan"

# Usage: ./run-prompt.sh plan-demo [--feature-name="User Authentication"] [--complexity="High"] [--priority="Critical"] [--requirements-file="docs/auth-requirements.md"] [--architecture-file="docs/system-architecture.md"] [--dependencies="OAuth, JWT, MongoDB"] [--timeline="3-week sprint"] [--team-size="2 developers"] [--target-audience="Mobile users"] [--go]
#
# This template demonstrates:
# 1. How to create an advanced plan task with a custom template
# 2. How to define default patterns for including/excluding files
# 3. How to inject file content for requirements and architecture
# 4. How to customize the feature details, complexity, and timeline
# 5. How to specify team constraints and target audience
